- name: Download cert-manager CRDs manifest.
  ansible.builtin.get_url:
    url: https://github.com/cert-manager/cert-manager/releases/download/{{ cert_manager_ver }}/cert-manager.crds.yaml
    dest: "{{ dest }}cert-manager.crds.yaml"
    mode: '0644'

- name: Download manifests to host
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ dest }}"
    mode: '0644'
  with_fileglob: "*"

- name: Apply cert-manager CRDs.
  kubernetes.core.k8s:
    state: present
    src: "{{ dest }}cert-manager.crds.yaml"
    kubeconfig: "{{ kubeconfig }}"

- name: Add jetstack chart repo
  kubernetes.core.helm_repository:
    name: jetstack
    repo_url: "https://charts.jetstack.io"

- name: Install jetstack/cert-manager chart from repo
  kubernetes.core.helm:
    release_name: cert-manager
    release_namespace: cert-manager
    create_namespace: true
    chart_ref: jetstack/cert-manager
    chart_version: "{{ cert_manager_ver }}"
    wait: true
    update_repo_cache: true
    kubeconfig: "{{ kubeconfig }}"

- name: Create vault issuer service account
  kubernetes.core.k8s:
    name: issuer
    namespace: cert-manager
    api_version: v1
    kind: ServiceAccount
    state: present
    kubeconfig: "{{ kubeconfig }}"

- name: Get caBundle data
  ansible.builtin.shell: >
    kubectl config view --minify --raw | grep certificate-authority-data: | sed 's/^.*: //'
  register: cabundle_data

- name: Set fact from cabundle data
  ansible.builtin.set_fact:
    cabundle: "{{ cabundle_data.stdout }}"

- name: Create vault-cluster-issuer.yaml file
  ansible.builtin.template:
    src: vault-cluster-issuer.yaml.j2
    dest: "{{ dest }}vault-cluster-issuer.yaml"
    mode: '0644'

- name: Deploy vault issuer and secret
  kubernetes.core.k8s:
    state: present
    src: "{{ dest }}{{ item }}"
    kubeconfig: "{{ kubeconfig }}"
  loop:
    - issuer-secret.yaml
    - vault-cluster-issuer.yaml

- name: Create gcp certmanager secret json file
  ansible.builtin.template:
    src: gcp-certmanager-creds.json.j2
    dest: gcp-certmanager-creds.json
    mode: '0644'

- name: Create secret from json file
  ansible.builtin.shell: kubectl create secret generic gcp-certmanager --namespace=cert-manager --from-file=gcp-certmanager-creds.json

- name: Delete secret json file
  ansible.builtin.file:
    src: gcp-certmanager-creds.json
    state: absent

- name: Deploy acme issuer
  kubernetes.core.k8s:
    src: "{{ dest }}acme-cluster-issuer.yaml"
    state: present
    kubeconfig: "{{ kubeconfig }}"
