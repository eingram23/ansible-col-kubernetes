---
- name: Populate service facts
  ansible.builtin.service_facts:

- name: Create k3s config directory
  ansible.builtin.file:
    path: "/etc/rancher/k3s/config.yaml.d"
    state: directory
    mode: '0755'
    recurse: true

- name: Create k3s base config file for first cp node
  when: inventory_hostname == hostvars['localhost']['cp_nodes'][0]
  ansible.builtin.template:
    src: "cp-cluster-init.yaml.j2"
    dest: "/etc/rancher/k3s/config.yaml"
    mode: '0644'

- name: Create k3s base config file for additional cp nodes
  when: inventory_hostname != hostvars['localhost']['cp_nodes'][0]
  ansible.builtin.template:
    src: "cp-join.yaml.j2"
    dest: "/etc/rancher/k3s/config.yaml"
    mode: '0644'

- name: Create vsphere_csi config file
  when: "'vsphere_csi' in hostvars['localhost']['base_components']"
  block:
    - name: Get VM ID
      delegate_to: localhost
      community.vmware.vmware_vm_info:
        hostname: vcsa-1.local.lan
        username: "{{ lookup('hashi_vault', 'secret/vsphere/vcsa:vsphere_username') }}"
        password: "{{ lookup('hashi_vault', 'secret/vsphere/vcsa:vsphere_password') }}"
        validate_certs: false
        vm_name: "{{ hostvars[inventory_hostname]['ansible_hostname'] }}"
      register: vm_info

    - name: Create vsphere_csi config file
      ansible.builtin.template:
        src: "vsphere_csi_cp.yaml.j2"
        dest: "/etc/rancher/k3s/config.yaml.d/vsphere-csi.yaml"
        mode: '0644'

- name: Create ingress-nginx config file
  when: "'ingress_nginx' in hostvars['localhost']['base_components']"
  ansible.builtin.template:
    src: "ingress_nginx.yaml.j2"
    dest: "/etc/rancher/k3s/config.yaml.d/ingress-nginx.yaml"
    mode: '0644'

- name: Install k3s
  when:
    - ansible_facts['services']['k3s.service']['status'] is not defined
  ansible.builtin.shell: >
    curl -sfL https://get.k3s.io |
    INSTALL_K3S_VERSION={{ k3s_ver }}
    K3S_TOKEN={{ hostvars['localhost']['k3s_token'] }} sh -s - server
  register: k3s_cp_install_status

- name: Check installation status
  ansible.builtin.debug:
    var: k3s_cp_install_status

- name: Install k3s service
  ansible.builtin.systemd_service:
    name: k3s
    enabled: true
    state: started

- name: Wait until k3s is ready
  ansible.builtin.wait_for:
    host: localhost
    port: 6443
    delay: 10
    timeout: 300
    state: started
  register: k3s_ready
  until: k3s_ready is succeeded
