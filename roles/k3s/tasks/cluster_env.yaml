---
- name: Load cluster vars
  ansible.builtin.include_vars:
    file: "{{ cluster }}.yaml"

- name: Set cp_nodes
  ansible.builtin.set_fact:
    cp_nodes: "{{ range(1, cp_count | int + 1) | map('regex_replace', '^(.*)$', cluster + '-cp\\1.local.lan') | list }}"

- name: Set worker_nodes
  ansible.builtin.set_fact:
    worker_nodes: "{{ range(1, worker_count | int + 1) | map('regex_replace', '^(.*)$', cluster + '-worker\\1.local.lan') | list }}"

- name: Set k3s_token
  ansible.builtin.set_fact:
    k3s_token: "{{ lookup('hashi_vault', 'secret=secret/ssh/ansible:ssh_password') }}"

# - name: Add A record to primary DNS zone for {{ cluster }}
#   ansible.builtin.uri:
#     url: >-
#       "{{ technitium_url }}token={{ technitium_token }}
#       &domain={{ technitium_domain }}
#       &zone={{ technitium_zone }}
#       &type=A&ipAddress={{ technitium_ip }}
#       &ptr=true&ptrName={{ technitium_ptr_zone }}
#       &overwrite=true"
#     method: GET
#     status_code: 200
#   register: technitium_update_result
#   failed_when: technitium_update_result.json.status != "ok"
