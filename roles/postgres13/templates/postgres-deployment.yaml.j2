apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels: 
    app: postgres
  namespace: postgres
spec:
  replicas: 1
  selector: 
    matchLabels:
      app: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - env:
        # - name: POSTGRES_DB
        #   value: mydb
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: defaultpassword
              optional: false
        - name: POSTGRES_USER
          value: postgres
        image: postgres:{{ postgres_ver }}
        name: postgres
        # Readiness and Liveness Probe
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "$(POSTGRES_USER)", "-h", "localhost", "-p", "5432" ]
          initialDelaySeconds: 10
          timeoutSeconds: 10
        livenessProbe:
          exec:
            command: ["pg_isready", "-U", "$(POSTGRES_USER)", "-h", "localhost", "-p", "5432" ]
          initialDelaySeconds: 30
          timeoutSeconds: 10
        ports:
          - containerPort: 5432
            name: postgres     
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-data
          subPath: postgres
      restartPolicy: Always
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-data-pvc
      
