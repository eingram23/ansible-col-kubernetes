- name: Create a k8s namespace
  kubernetes.core.k8s:
    name: postgres
    api_version: v1
    kind: Namespace
    state: present
    kubeconfig: "{{ kubeconfig }}"

- name: Create secret for deployment
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: postgres-secrets
        namespace: postgres
      type: Opaque
      data:
        defaultpassword: "{{ defaultpassword | b64encode }}"
    state: present
    kubeconfig: "{{ kubeconfig }}"

- name: Download manifests to host
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ dest }}"
    mode: '0644'
  with_fileglob: "*"

- name: Create postgres13-deployment.yaml manifest on host
  ansible.builtin.template:
    src: postgres13-deployment.yaml.j2
    dest: "{{ dest }}postgres13-deployment.yaml"

- name: Create pgadmin4-ingressroute.yaml manifest on host
  ansible.builtin.template:
    src: pgadmin4-ingressroute.yaml.j2
    dest: "{{ dest }}pgadmin4-ingressroute.yaml"

- name: Create pgadmin4-deployment.yaml manifest on host
  ansible.builtin.template:
    src: pgadmin4-deployment.yaml.j2
    dest: "{{ dest }}pgadmin4-deployment.yaml"

- name: Create pgadmin4-ingressroute.yaml manifest on host
  ansible.builtin.template:
    src: pgadmin4-ingressroute.yaml.j2
    dest: "{{ dest }}pgadmin4-ingressroute.yaml"

- name: Deploy postgres13 + pgadmin4
  kubernetes.core.k8s:
    state: present
    src: "{{ dest }}{{ item }}"
    kubeconfig: "{{ kubeconfig }}"
  loop:
    - pgadmin4-configmap.yaml
    - postgres13-pvc.yaml
    - pgadmin4-pvc.yaml
    - postgres13-service.yaml
    - pgadmin4-service.yaml
    - postgres13-deployment.yaml
    - pgadmin4-deployment.yaml
    - postgres13-ingressroute.yaml
    - pgadmin4-ingressroute.yaml
