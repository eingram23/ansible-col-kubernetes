---
- name: Download manifests to host
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ dest }}"
    mode: '0644'
  with_fileglob: "*"

- name: Create vault ingress
  ansible.builtin.template:
    src: vault-ingress.yaml.j2
    dest: "{{ dest }}vault-ingress.yaml"
    mode: '0644'
    
- name: Add hashicorp/vault chart repo
  kubernetes.core.helm_repository:
    name: hashicorp
    repo_url: "https://helm.releases.hashicorp.com"

- name: Install hashicorp/vault chart from repo
  kubernetes.core.helm:
    release_name: vault
    release_namespace: vault
    create_namespace: true
    chart_ref: hashicorp/vault
    wait: true
    update_repo_cache: true
    values_files: "{{ dest }}vault-values.yaml"
    kubeconfig: "{{ kubeconfig }}"

- name: Deploy vault ingress
  kubernetes.core.k8s:
    state: present
    src: "{{ dest }}{{ item }}"
    kubeconfig: "{{ kubeconfig }}"
  loop:
    - vault-ingress.yaml

- name: Search for all running pods
  kubernetes.core.k8s_info:
    kind: Pod
    name: vault-0
    namespace: vault
    # field_selectors:
    #   - status.phase=Running
    kubeconfig: "{{ kubeconfig }}"
  register: vault_running

- ansible.builtin.debug:
    var: vault_running

# - block:
#     - name: Wait for 40 seconds
#       ansible.builtin.pause:
#         seconds: 40

#     - name: Init and export cluster-keys.json
#       ansible.builtin.shell:
#         cmd: |
#           kubectl exec vault-0 -n vault -- vault operator init -key-shares=1 -key-threshold=1 -format=json > cluster-keys.json

#     - name: Unseal vault
#       ansible.builtin.shell:
#         cmd: |
#           VAULT_UNSEAL_KEY=$(jq -r ".unseal_keys_b64[]" cluster-keys.json)
#           kubectl exec vault-0 -n vault -- vault operator unseal $VAULT_UNSEAL_KEY
#   when: vault_running not exists

# - name: Unseal vault
#   ansible.builtin.shell:
#     cmd: |
#       VAULT_UNSEAL_KEY=$(jq -r ".unseal_keys_b64[]" cluster-keys.json)
#       kubectl exec vault-0 -n vault -- vault operator unseal $VAULT_UNSEAL_KEY
#   tags: 
#     - never
#     - unseal

# - name: Enable pki engine
#   ansible.builtin.shell:
#     cmd: |
#       VAULT_ROOT_TOKEN=$(cat init-keys.json | jq -r ".root_token")
#       kubectl exec vault-0 -n vault -- vault login $VAULT_ROOT_TOKEN
#       kubectl exec vault-0 -n vault -- vault secrets enable pki
#       kubectl exec vault-0 -n vault -- vault secrets tune -max-lease-ttl=8760h pki

# - block:
#     - name: Extract root token
#       ansible.builtin.shell:
#         cmd: jq -r ".root_token" cluster-keys.json
#       register: root_token

#     - name: Show root_token
#       ansible.builtin.debug:
#         var: root_token.stdout
#   tags:
#     - always
#     - show_token
