---
- name: Create kubeconfig file
  ansible.builtin.copy:
    content: "{{ lookup('hashi_vault', 'secret=secret/kubernetes/kubeconfig:tanzu') }}"
    dest: "/var/tmp/tanzu.yaml"

- name: Login to Tanzu cluster
  ansible.builtin.include_role:
    name: eingram23.kubernetes.tanzu
    tasks_from: login.yaml

- name: Create gitea k8s namespace
  kubernetes.core.k8s:
    name: gitea
    api_version: v1
    kind: Namespace
    state: present
    kubeconfig: "{{ kubeconfig }}"

- name: Set domain (local.lan)
  ansible.builtin.set_fact:
    app_domain: "local.lan"
  when: cert == "vault"

- name: Set domain (ycdisp.net)
  ansible.builtin.set_fact:
    app_domain: "ycdisp.net"
  when: cert == "acme"

- name: Add gitea-charts/gitea chart repo
  kubernetes.core.helm_repository:
    name: gitea-charts
    repo_url: "https://dl.gitea.io/charts/"

- name: Create gitea secrets
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "{{ dest }}{{ item }}"
    mode: '0644'
  loop:
    - gitea-admin-secret.yaml
    # - gitea-postgres-secret.yaml
    - gitea-cert-{{ cert }}.yaml
    - gitea-httpproxy.yaml

# - name: Set storageclass (Dev)
#   ansible.builtin.set_fact:
#     storageclass: longhorn-homelab-dev
#   when: suffix == "-dev"

- name: Create gitea values
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "{{ dest }}{{ item }}"
    mode: '0644'
  loop:
    - gitea-values.yaml

- name: Deploy gitea secrets
  kubernetes.core.k8s:
    state: present
    src: "{{ dest }}{{ item }}"
    kubeconfig: "{{ kubeconfig }}"
  loop:
    - gitea-admin-secret.yaml
    # - gitea-postgres-secret.yaml

- name: Deploy gitea cert and httpproxy
  kubernetes.core.k8s:
    state: present
    src: "{{ dest }}{{ item }}"
    kubeconfig: "{{ kubeconfig }}"
  loop:
    - gitea-cert-{{ cert }}.yaml
    - gitea-httpproxy.yaml

- name: Install gitea-charts/gitea chart from repo
  kubernetes.core.helm:
    release_name: gitea
    release_namespace: gitea
    create_namespace: false
    chart_ref: gitea-charts/gitea
    chart_version: "{{ gitea_chart_ver }}"
    wait: true
    update_repo_cache: true
    values_files: "{{ dest }}gitea-values.yaml"
    kubeconfig: "{{ kubeconfig }}"

# - name: Get svc info
#   kubernetes.core.k8s_info:
#     api_version: v1
#     kind: Service
#     name: gitea-http
#     namespace: gitea
#     kubeconfig: "{{ kubeconfig }}"
#   register: service

# - name: Set ip_address
#   ansible.builtin.set_fact:
#     ip_address: "{{ service | json_query('resources[0].status.loadBalancer.ingress[0].ip') }}"

- name: Add unifi GCP DNS record
  ansible.builtin.include_role:
    name: eingram23.gcp.cloud_dns
    tasks_from: add
    apply:
      delegate_to: localhost
  vars:
    appname: gitea{{ suffix }}
    target: "{{ ip_address }}"
  when: cert != "vault"

- name: Display IP Address
  ansible.builtin.debug:
    msg: "IP Address is {{ ip_address }}"