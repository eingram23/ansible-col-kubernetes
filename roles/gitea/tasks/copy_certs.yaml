---
# - name: Ensure vars are set
#   ansible.builtin.assert:
#     that:
#       - master_node is defined

- name: Create staging folders
  ansible.builtin.file:
    path: "{{ dest }}"
    state: directory
    mode: '0755'

# - name: Create gitea k8s namespace
#   kubernetes.core.k8s:
#     name: gitea
#     api_version: v1
#     kind: Namespace
#     state: present
#     # kubeconfig: "{{ kubeconfig }}"

# - name: Set domain (local.lan)
#   ansible.builtin.set_fact:
#     app_domain: "local.lan"
#   when: cert == "vault"

# - name: Set domain (ycdisp.net)
#   ansible.builtin.set_fact:
#     app_domain: "ycdisp.net"
#   when: cert == "acme"

# - name: Add gitea-charts/gitea chart repo
#   kubernetes.core.helm_repository:
#     name: gitea-charts
#     repo_url: "https://dl.gitea.io/charts/"

# - name: Create gitea secrets
#   ansible.builtin.template:
#     src: "{{ item }}.j2"
#     dest: "{{ dest }}{{ item }}"
#     mode: '0644'
#   loop:
#     - gitea-admin-secret.yaml
#     - gitea-postgres-secret.yaml
#     - gitea-cert-{{ cert }}.yaml

# - name: Create gitea values
#   ansible.builtin.template:
#     src: "{{ item }}.j2"
#     dest: "{{ dest }}{{ item }}"
#     mode: '0644'
#   loop:
#     - gitea-values.yaml

# - name: Deploy gitea secrets
#   kubernetes.core.k8s:
#     state: present
#     src: "{{ dest }}{{ item }}"
#     # kubeconfig: "{{ kubeconfig }}"
#   loop:
#     - gitea-admin-secret.yaml
#     - gitea-postgres-secret.yaml

# - name: Deploy gitea cert
#   kubernetes.core.k8s:
#     state: present
#     src: "{{ dest }}{{ item }}"
#     # kubeconfig: "{{ kubeconfig }}"
#   loop:
#     - gitea-cert-{{ cert }}.yaml

# - name: Install gitea-charts/gitea chart from repo
#   kubernetes.core.helm:
#     release_name: gitea
#     release_namespace: gitea
#     create_namespace: true
#     chart_ref: gitea-charts/gitea
#     chart_version: "{{ gitea_chart_ver }}"
#     wait: true
#     update_repo_cache: true
#     values_files: "{{ dest }}gitea-values.yaml"
#     # kubeconfig: "{{ kubeconfig }}"

# - name: Get svc info
#   kubernetes.core.k8s_info:
#     api_version: v1
#     kind: Service
#     name: gitea-http
#     namespace: gitea
#     # kubeconfig: /etc/rancher/k3s/k3s.yaml
#   register: service

# - name: Set ip_address
#   ansible.builtin.set_fact:
#     ip_address: "{{ service | json_query('resources[0].status.loadBalancer.ingress[0].ip') }}"

# - name: Add unifi GCP DNS record
#   ansible.builtin.include_role:
#     name: eingram23.gcp.cloud_dns
#     tasks_from: add
#     apply:
#       delegate_to: localhost
#   vars:
#     appname: gitea{{ suffix }}
#     target: "{{ ip_address }}"
#   when: cert != "vault"

# - name: Display IP Address
#   ansible.builtin.debug:
#     msg: "IP Address is {{ ip_address }}"

- name: Export gitea certs
  ansible.builtin.shell: |
    kubectl get secret gitea-tls -n gitea -o jsonpath="{.data.tls\.key}"|base64 --decode > {{ dest }}gitea_tls.key
    chmod 400 /etc/rancher/k3s/gitea-tls.key
    kubectl get secret gitea-tls -n gitea -o jsonpath="{.data.tls\.crt}"|base64 --decode > {{ dest }}gitea_tls.crt
    kubectl get secret gitea-tls -n gitea -o jsonpath="{.data.ca\.crt}"|base64 --decode > {{ dest }}gitea_ca.crt

- name: Run tasks on master node
  delegate_to: "{{ cp_node }}.local.lan"
  become: true
  block:
    - name: Create /etc/rancher/k3s if missing
      ansible.builtin.file:
        path: /etc/rancher/k3s
        state: directory
        mode: '0755'

    - name: Create registries.yaml file on host
      ansible.builtin.template:
        src: registries.yaml.j2
        dest: /etc/rancher/k3s/registries.yaml
        mode: '0400'

    - name: Copy gitea certs to host
      ansible.builtin.copy:
        src: "{{ dest }}{{ item }}"
        dest: /etc/rancher/k3s/
        mode: '0400'
      loop:
        - gitea_tls.key
        - gitea_tls.crt
        - gitea_ca.crt
      notify: Restart k3s