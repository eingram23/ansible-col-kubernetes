---
# - name: Create kubeconfig file
#   ansible.builtin.copy:
#     content: "{{ lookup('hashi_vault', 'secret=secret/kubernetes/kubeconfig:tanzu') }}"
#     dest: "/var/tmp/tanzu.yaml"

- name: Create unifi k8s namespace
  kubernetes.core.k8s:
    name: unifi
    api_version: v1
    kind: Namespace
    state: present
    kubeconfig: "{{ kubeconfig }}"

- name: Download manifests to host
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ dest }}"
    mode: '0644'
  with_fileglob: "*"

- name: Create template manifests on host
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "{{ dest }}{{ item }}"
    mode: '0644'
  loop:
    - unifi-cert-{{ cert }}.yaml
    - unifi-deployment-{{ cert }}.yaml

- name: Deploy unifi-pvc
  kubernetes.core.k8s:
    state: present
    src: "{{ dest }}unifi-pvc{{ suffix }}.yaml"
    kubeconfig: "{{ kubeconfig }}"

- name: Deploy unifi
  kubernetes.core.k8s:
    state: present
    src: "{{ dest }}{{ item }}"
    kubeconfig: "{{ kubeconfig }}"
  loop:
    - unifi-service.yaml
    - unifi-deployment-{{ cert }}.yaml

- name: Get svc info
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Service
    name: unifi-tcp
    namespace: unifi
    kubeconfig: "{{ kubeconfig }}"
  register: service

- name: Set ip_address 
  ansible.builtin.set_fact:
    ip_address: "{{ service | json_query('resources[0].status.loadBalancer.ingress[0].ip') }}"

- name: Add unifi GCP DNS record
  ansible.builtin.include_role:
    name: eingram23.gcp.cloud_dns
    tasks_from: add
    apply:
      delegate_to: localhost
  vars:
    appname: unifi{{ suffix }}
    target: "{{ ip_address }}"
  when: cert != "vault"

# - name: Deploy unifi cert
#   kubernetes.core.k8s:
#     state: present
#     src: "{{ dest }}{{ item }}"
#     kubeconfig: "{{ kubeconfig }}"
#   loop:
#     - unifi-cert-{{ cert }}.yaml

- name: Display IP Address
  ansible.builtin.debug:
    msg: "IP Address is {{ ip_address }}"