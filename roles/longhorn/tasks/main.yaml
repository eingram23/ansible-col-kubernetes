- name: Download longhorn-iscsi-install manifest
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/longhorn/longhorn/v{{ longhorn_ver }}/deploy/prerequisite/longhorn-iscsi-installation.yaml"
    dest: "{{ dest }}{{ iscsi_manifest }}"
    mode: '0644'

- name: Deploy longhorn-iscsi-install DaemonSet
  kubernetes.core.k8s:
    state: present
    namespace: default
    src: "{{ dest }}{{ iscsi_manifest }}"
    kubeconfig: "{{ kubeconfig }}"

- name: Pause for 20 seconds
  ansible.builtin.pause:
    seconds: 20

# - name: Download longhorn manifest
#   ansible.builtin.get_url:
#     url: "https://raw.githubusercontent.com/longhorn/longhorn/{{ longhorn_ver }}/deploy/longhorn.yaml"
#     dest: "{{ dest }}{{ longhorn_manifest }}"
#     mode: '0644'

# - name: Deploy longhorn deployment
#   kubernetes.core.k8s:
#     state: present
#     src: "{{ dest }}{{ longhorn_manifest }}"
#     kubeconfig: "{{ kubeconfig }}"

# - name: Wait for metallb pods become ready
#   shell: "kubectl wait --namespace=longhorn-system --for=condition=Ready pods --all --timeout=600s"

- name: Remove longhorn-iscsi-install DaemonSet
  kubernetes.core.k8s:
    state: absent
    namespace: default
    kind: DaemonSet
    name: longhorn-iscsi-installation
    kubeconfig: "{{ kubeconfig }}"

- name: Copy longhorn manifests to host
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ dest }}"
    mode: '0644'
  with_fileglob: "*"

- name: Create templated manifests on host
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "{{ dest }}{{ item }}"
    mode: '0644'
  loop:
    - longhorn-ingressroute.yaml
    # - longhorn-s3-secret.yaml
    
- name: Add longhorn chart repo
  kubernetes.core.helm_repository:
    name: longhorn
    repo_url: "https://charts.longhorn.io"

# - name: Delete default longhorn-frontend service so we can install new service with IngressRoute
#   kubernetes.core.k8s:
#     state: absent
#     name: longhorn-frontend
#     kind: service
#     namespace: longhorn-system
#     kubeconfig: "{{ kubeconfig }}"

- name: Install longhorn chart from repo
  kubernetes.core.helm:
    release_name: longhorn
    release_namespace: longhorn-system
    create_namespace: true
    chart_ref: longhorn/longhorn
    chart_version: "{{ longhorn_ver }}"
    wait: true
    update_repo_cache: true
    values_files: "{{ dest }}longhorn-values.yaml"
    kubeconfig: "{{ kubeconfig }}"

- name: Deploy longhorn UI, ingressroute and storageclass
  kubernetes.core.k8s:
    state: present
    src: "{{ dest }}{{ item }}"
    kubeconfig: "{{ kubeconfig }}"
  loop:
    # - longhorn-ui.yaml
    # - longhorn-s3-secret.yaml
    - longhorn-ingressroute.yaml
    - longhorn-storageclass.yaml

- name: Make longhorn the default storage class
  ansible.builtin.shell: |
    kubectl patch storageclass local-path -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"false"}}}'
    kubectl patch storageclass longhorn -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"false"}}}'
